{"version":3,"file":"timer.js","sources":["../src/js/timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\nconst inRef = document.querySelector('#datetime-picker');\nconst butRef = document.querySelector('[data-start]');\nconst daysRef = document.querySelector('[data-days]');\nconst hoursRef = document.querySelector('[data-hours]');\nconst minRef = document.querySelector('[data-minutes]');\nconst secRef = document.querySelector('[data-seconds]');\n\nlet timerDL;\nlet userSelectedDate;\nlet currentTime;\n\nbutRef.setAttribute('disabled', true);\nbutRef.addEventListener('click', onStart);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    currentTime = Date.now()\n    userSelectedDate = selectedDates[0];\n      if(userSelectedDate <= currentTime){\n      butRef.setAttribute('disabled', true);\n      iziToast.error({\n      title:\"Error!\",\n      message: \"Please choose a date in the future\",\n      position: \"topCenter\"\n    })\n      }else{\n    butRef.removeAttribute('disabled');\n  }\n  timerDL = new Date(userSelectedDate);\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction onStart(){\n  inRef.setAttribute('disabled', true);\n  butRef.setAttribute('disabled', true);\n\n  const timerID = setInterval(() => {\n  const startTime = Date.now();\n  const time = timerDL - startTime;\n  const getTime = convertMs(time);\n\n  daysRef.textContent = getTime.days;\n  hoursRef.textContent = getTime.hours;\n  minRef.textContent = getTime.minutes;\n  secRef.textContent = getTime.seconds;\n\n  if (time < 1000){\n    clearInterval(timerID);\n  }\n}, 1000)\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction  addLeadingZero(value){\n  return String(value).padStart(2, '0');\n}\n\n"],"names":["inRef","butRef","daysRef","hoursRef","minRef","secRef","timerDL","userSelectedDate","currentTime","onStart","options","selectedDates","iziToast","flatpickr","timerID","startTime","time","getTime","convertMs","ms","days","addLeadingZero","hours","minutes","seconds","value"],"mappings":"0IAOA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EAEtD,IAAIC,EACAC,EACAC,EAEJP,EAAO,aAAa,WAAY,EAAI,EACpCA,EAAO,iBAAiB,QAASQ,CAAO,EAExC,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAc,KAAK,IAAK,EACxBD,EAAmBI,EAAc,CAAC,EAC7BJ,GAAoBC,GACvBP,EAAO,aAAa,WAAY,EAAI,EACpCW,EAAS,MAAM,CACf,MAAM,SACN,QAAS,qCACT,SAAU,WAChB,CAAK,GAEDX,EAAO,gBAAgB,UAAU,EAEnCK,EAAU,IAAI,KAAKC,CAAgB,CAClC,CACH,EAEAM,EAAU,mBAAoBH,CAAO,EAErC,SAASD,GAAS,CAChBT,EAAM,aAAa,WAAY,EAAI,EACnCC,EAAO,aAAa,WAAY,EAAI,EAEpC,MAAMa,EAAU,YAAY,IAAM,CAClC,MAAMC,EAAY,KAAK,MACjBC,EAAOV,EAAUS,EACjBE,EAAUC,EAAUF,CAAI,EAE9Bd,EAAQ,YAAce,EAAQ,KAC9Bd,EAAS,YAAcc,EAAQ,MAC/Bb,EAAO,YAAca,EAAQ,QAC7BZ,EAAO,YAAcY,EAAQ,QAEzBD,EAAO,KACT,cAAcF,CAAO,CAEzB,EAAG,GAAI,CACP,CAEA,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAOC,EAAe,KAAK,MAAMF,EAAK,KAAG,CAAC,EAC1CG,EAAQD,EAAe,KAAK,MAAOF,EAAK,MAAO,IAAI,CAAC,EACpDI,EAAUF,EAAe,KAAK,MAAQF,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEK,EAAUH,EAAe,KAAK,MAASF,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAElF,MAAO,CAAE,KAAAC,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAAUH,EAAeI,EAAM,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}